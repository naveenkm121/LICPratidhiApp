// Generated by Dagger (https://dagger.dev).
package com.licapps.bmmis.di;

import com.licapps.bmmis.data.api.PlanRemoteDataSource;
import com.licapps.bmmis.data.localdb.PlanDao;
import com.licapps.bmmis.data.repository.PlansRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideRepositoryFactory implements Factory<PlansRepository> {
  private final Provider<PlanRemoteDataSource> remoteDataSourceProvider;

  private final Provider<PlanDao> localDataSourceProvider;

  public AppModule_ProvideRepositoryFactory(Provider<PlanRemoteDataSource> remoteDataSourceProvider,
      Provider<PlanDao> localDataSourceProvider) {
    this.remoteDataSourceProvider = remoteDataSourceProvider;
    this.localDataSourceProvider = localDataSourceProvider;
  }

  @Override
  public PlansRepository get() {
    return provideRepository(remoteDataSourceProvider.get(), localDataSourceProvider.get());
  }

  public static AppModule_ProvideRepositoryFactory create(
      Provider<PlanRemoteDataSource> remoteDataSourceProvider,
      Provider<PlanDao> localDataSourceProvider) {
    return new AppModule_ProvideRepositoryFactory(remoteDataSourceProvider, localDataSourceProvider);
  }

  public static PlansRepository provideRepository(PlanRemoteDataSource remoteDataSource,
      PlanDao localDataSource) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideRepository(remoteDataSource, localDataSource));
  }
}
