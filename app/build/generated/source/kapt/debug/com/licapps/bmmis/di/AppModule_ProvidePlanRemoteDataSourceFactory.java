// Generated by Dagger (https://dagger.dev).
package com.licapps.bmmis.di;

import com.licapps.bmmis.data.api.PlanRemoteDataSource;
import com.licapps.bmmis.data.api.PlanServices;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvidePlanRemoteDataSourceFactory implements Factory<PlanRemoteDataSource> {
  private final Provider<PlanServices> planServicesProvider;

  public AppModule_ProvidePlanRemoteDataSourceFactory(Provider<PlanServices> planServicesProvider) {
    this.planServicesProvider = planServicesProvider;
  }

  @Override
  public PlanRemoteDataSource get() {
    return providePlanRemoteDataSource(planServicesProvider.get());
  }

  public static AppModule_ProvidePlanRemoteDataSourceFactory create(
      Provider<PlanServices> planServicesProvider) {
    return new AppModule_ProvidePlanRemoteDataSourceFactory(planServicesProvider);
  }

  public static PlanRemoteDataSource providePlanRemoteDataSource(PlanServices planServices) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providePlanRemoteDataSource(planServices));
  }
}
