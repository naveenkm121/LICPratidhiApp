// Generated by Dagger (https://dagger.dev).
package com.licapps.bmmis.data.repository;

import com.licapps.bmmis.data.api.BMMisRemoteDataSource;
import com.licapps.bmmis.data.localdb.PlanDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AnandaRepository_Factory implements Factory<AnandaRepository> {
  private final Provider<BMMisRemoteDataSource> remoteDataSourceProvider;

  private final Provider<PlanDao> localDataSourceProvider;

  public AnandaRepository_Factory(Provider<BMMisRemoteDataSource> remoteDataSourceProvider,
      Provider<PlanDao> localDataSourceProvider) {
    this.remoteDataSourceProvider = remoteDataSourceProvider;
    this.localDataSourceProvider = localDataSourceProvider;
  }

  @Override
  public AnandaRepository get() {
    return newInstance(remoteDataSourceProvider.get(), localDataSourceProvider.get());
  }

  public static AnandaRepository_Factory create(
      Provider<BMMisRemoteDataSource> remoteDataSourceProvider,
      Provider<PlanDao> localDataSourceProvider) {
    return new AnandaRepository_Factory(remoteDataSourceProvider, localDataSourceProvider);
  }

  public static AnandaRepository newInstance(BMMisRemoteDataSource remoteDataSource,
      PlanDao localDataSource) {
    return new AnandaRepository(remoteDataSource, localDataSource);
  }
}
