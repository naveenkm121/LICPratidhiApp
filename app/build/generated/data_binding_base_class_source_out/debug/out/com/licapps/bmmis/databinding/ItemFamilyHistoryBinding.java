// Generated by view binder compiler. Do not edit!
package com.licapps.bmmis.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.licapps.bmmis.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFamilyHistoryBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final MaterialTextView ageMTV;

  @NonNull
  public final MaterialTextView deathCauseMTV;

  @NonNull
  public final ImageView deleteIV;

  @NonNull
  public final MaterialTextView healthStateMTV;

  @NonNull
  public final MaterialTextView livingMTV;

  @NonNull
  public final MaterialTextView relationshipMTV;

  private ItemFamilyHistoryBinding(@NonNull CardView rootView, @NonNull MaterialTextView ageMTV,
      @NonNull MaterialTextView deathCauseMTV, @NonNull ImageView deleteIV,
      @NonNull MaterialTextView healthStateMTV, @NonNull MaterialTextView livingMTV,
      @NonNull MaterialTextView relationshipMTV) {
    this.rootView = rootView;
    this.ageMTV = ageMTV;
    this.deathCauseMTV = deathCauseMTV;
    this.deleteIV = deleteIV;
    this.healthStateMTV = healthStateMTV;
    this.livingMTV = livingMTV;
    this.relationshipMTV = relationshipMTV;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFamilyHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFamilyHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_family_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFamilyHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ageMTV;
      MaterialTextView ageMTV = ViewBindings.findChildViewById(rootView, id);
      if (ageMTV == null) {
        break missingId;
      }

      id = R.id.deathCauseMTV;
      MaterialTextView deathCauseMTV = ViewBindings.findChildViewById(rootView, id);
      if (deathCauseMTV == null) {
        break missingId;
      }

      id = R.id.deleteIV;
      ImageView deleteIV = ViewBindings.findChildViewById(rootView, id);
      if (deleteIV == null) {
        break missingId;
      }

      id = R.id.healthStateMTV;
      MaterialTextView healthStateMTV = ViewBindings.findChildViewById(rootView, id);
      if (healthStateMTV == null) {
        break missingId;
      }

      id = R.id.livingMTV;
      MaterialTextView livingMTV = ViewBindings.findChildViewById(rootView, id);
      if (livingMTV == null) {
        break missingId;
      }

      id = R.id.relationshipMTV;
      MaterialTextView relationshipMTV = ViewBindings.findChildViewById(rootView, id);
      if (relationshipMTV == null) {
        break missingId;
      }

      return new ItemFamilyHistoryBinding((CardView) rootView, ageMTV, deathCauseMTV, deleteIV,
          healthStateMTV, livingMTV, relationshipMTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
