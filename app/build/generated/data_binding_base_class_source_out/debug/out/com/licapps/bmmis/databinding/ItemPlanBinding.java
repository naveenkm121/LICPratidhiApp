// Generated by view binder compiler. Do not edit!
package com.licapps.bmmis.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.licapps.bmmis.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPlanBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView feature1TV;

  @NonNull
  public final TextView feature2TV;

  @NonNull
  public final TextView feature3TV;

  @NonNull
  public final ConstraintLayout layout;

  @NonNull
  public final TextView minEntryAgeTV;

  @NonNull
  public final TextView minEntryAgeValueTV;

  @NonNull
  public final ImageView planImageIV;

  @NonNull
  public final TextView planNameTV;

  @NonNull
  public final TextView planTypeTV;

  @NonNull
  public final TextView planUINTV;

  private ItemPlanBinding(@NonNull CardView rootView, @NonNull TextView feature1TV,
      @NonNull TextView feature2TV, @NonNull TextView feature3TV, @NonNull ConstraintLayout layout,
      @NonNull TextView minEntryAgeTV, @NonNull TextView minEntryAgeValueTV,
      @NonNull ImageView planImageIV, @NonNull TextView planNameTV, @NonNull TextView planTypeTV,
      @NonNull TextView planUINTV) {
    this.rootView = rootView;
    this.feature1TV = feature1TV;
    this.feature2TV = feature2TV;
    this.feature3TV = feature3TV;
    this.layout = layout;
    this.minEntryAgeTV = minEntryAgeTV;
    this.minEntryAgeValueTV = minEntryAgeValueTV;
    this.planImageIV = planImageIV;
    this.planNameTV = planNameTV;
    this.planTypeTV = planTypeTV;
    this.planUINTV = planUINTV;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPlanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPlanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_plan, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPlanBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.feature1TV;
      TextView feature1TV = ViewBindings.findChildViewById(rootView, id);
      if (feature1TV == null) {
        break missingId;
      }

      id = R.id.feature2TV;
      TextView feature2TV = ViewBindings.findChildViewById(rootView, id);
      if (feature2TV == null) {
        break missingId;
      }

      id = R.id.feature3TV;
      TextView feature3TV = ViewBindings.findChildViewById(rootView, id);
      if (feature3TV == null) {
        break missingId;
      }

      id = R.id.layout;
      ConstraintLayout layout = ViewBindings.findChildViewById(rootView, id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.minEntryAgeTV;
      TextView minEntryAgeTV = ViewBindings.findChildViewById(rootView, id);
      if (minEntryAgeTV == null) {
        break missingId;
      }

      id = R.id.minEntryAgeValueTV;
      TextView minEntryAgeValueTV = ViewBindings.findChildViewById(rootView, id);
      if (minEntryAgeValueTV == null) {
        break missingId;
      }

      id = R.id.planImageIV;
      ImageView planImageIV = ViewBindings.findChildViewById(rootView, id);
      if (planImageIV == null) {
        break missingId;
      }

      id = R.id.planNameTV;
      TextView planNameTV = ViewBindings.findChildViewById(rootView, id);
      if (planNameTV == null) {
        break missingId;
      }

      id = R.id.planTypeTV;
      TextView planTypeTV = ViewBindings.findChildViewById(rootView, id);
      if (planTypeTV == null) {
        break missingId;
      }

      id = R.id.planUINTV;
      TextView planUINTV = ViewBindings.findChildViewById(rootView, id);
      if (planUINTV == null) {
        break missingId;
      }

      return new ItemPlanBinding((CardView) rootView, feature1TV, feature2TV, feature3TV, layout,
          minEntryAgeTV, minEntryAgeValueTV, planImageIV, planNameTV, planTypeTV, planUINTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
