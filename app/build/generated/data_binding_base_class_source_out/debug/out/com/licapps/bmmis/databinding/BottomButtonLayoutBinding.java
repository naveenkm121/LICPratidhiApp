// Generated by view binder compiler. Do not edit!
package com.licapps.bmmis.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.licapps.bmmis.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomButtonLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout calculatorLL;

  @NonNull
  public final TextView calculatorTV;

  @NonNull
  public final LinearLayout cartLayout;

  @NonNull
  public final LinearLayout shareLL;

  @NonNull
  public final TextView shareTV;

  private BottomButtonLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout calculatorLL, @NonNull TextView calculatorTV,
      @NonNull LinearLayout cartLayout, @NonNull LinearLayout shareLL, @NonNull TextView shareTV) {
    this.rootView = rootView;
    this.calculatorLL = calculatorLL;
    this.calculatorTV = calculatorTV;
    this.cartLayout = cartLayout;
    this.shareLL = shareLL;
    this.shareTV = shareTV;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomButtonLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomButtonLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_button_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomButtonLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calculatorLL;
      LinearLayout calculatorLL = ViewBindings.findChildViewById(rootView, id);
      if (calculatorLL == null) {
        break missingId;
      }

      id = R.id.calculatorTV;
      TextView calculatorTV = ViewBindings.findChildViewById(rootView, id);
      if (calculatorTV == null) {
        break missingId;
      }

      LinearLayout cartLayout = (LinearLayout) rootView;

      id = R.id.shareLL;
      LinearLayout shareLL = ViewBindings.findChildViewById(rootView, id);
      if (shareLL == null) {
        break missingId;
      }

      id = R.id.shareTV;
      TextView shareTV = ViewBindings.findChildViewById(rootView, id);
      if (shareTV == null) {
        break missingId;
      }

      return new BottomButtonLayoutBinding((LinearLayout) rootView, calculatorLL, calculatorTV,
          cartLayout, shareLL, shareTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
