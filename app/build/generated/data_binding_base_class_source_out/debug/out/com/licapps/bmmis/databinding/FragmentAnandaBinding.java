// Generated by view binder compiler. Do not edit!
package com.licapps.bmmis.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.radiobutton.MaterialRadioButton;
import com.google.android.material.textview.MaterialTextView;
import com.licapps.bmmis.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAnandaBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialTextView activeMTV;

  @NonNull
  public final CardView dataCardView;

  @NonNull
  public final RadioGroup filterRadioRG;

  @NonNull
  public final MaterialRadioButton forDayMRB;

  @NonNull
  public final MaterialTextView fpiMTV;

  @NonNull
  public final CardView headerCV;

  @NonNull
  public final ImageView noResultIV;

  @NonNull
  public final MaterialTextView nopMTV;

  @NonNull
  public final LayoutInvisibleProgressBarBinding progressBar;

  @NonNull
  public final LayoutShimmerLineBinding progressBarShim;

  @NonNull
  public final MaterialTextView sourceMTV;

  @NonNull
  public final MaterialTextView tActiveMTV;

  @NonNull
  public final MaterialTextView tFpiMTV;

  @NonNull
  public final MaterialTextView tNopMTV;

  @NonNull
  public final MaterialTextView totalMTV;

  @NonNull
  public final MaterialRadioButton uptoDateMRB;

  private FragmentAnandaBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialTextView activeMTV, @NonNull CardView dataCardView,
      @NonNull RadioGroup filterRadioRG, @NonNull MaterialRadioButton forDayMRB,
      @NonNull MaterialTextView fpiMTV, @NonNull CardView headerCV, @NonNull ImageView noResultIV,
      @NonNull MaterialTextView nopMTV, @NonNull LayoutInvisibleProgressBarBinding progressBar,
      @NonNull LayoutShimmerLineBinding progressBarShim, @NonNull MaterialTextView sourceMTV,
      @NonNull MaterialTextView tActiveMTV, @NonNull MaterialTextView tFpiMTV,
      @NonNull MaterialTextView tNopMTV, @NonNull MaterialTextView totalMTV,
      @NonNull MaterialRadioButton uptoDateMRB) {
    this.rootView = rootView;
    this.activeMTV = activeMTV;
    this.dataCardView = dataCardView;
    this.filterRadioRG = filterRadioRG;
    this.forDayMRB = forDayMRB;
    this.fpiMTV = fpiMTV;
    this.headerCV = headerCV;
    this.noResultIV = noResultIV;
    this.nopMTV = nopMTV;
    this.progressBar = progressBar;
    this.progressBarShim = progressBarShim;
    this.sourceMTV = sourceMTV;
    this.tActiveMTV = tActiveMTV;
    this.tFpiMTV = tFpiMTV;
    this.tNopMTV = tNopMTV;
    this.totalMTV = totalMTV;
    this.uptoDateMRB = uptoDateMRB;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAnandaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAnandaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_ananda, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAnandaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activeMTV;
      MaterialTextView activeMTV = ViewBindings.findChildViewById(rootView, id);
      if (activeMTV == null) {
        break missingId;
      }

      id = R.id.dataCardView;
      CardView dataCardView = ViewBindings.findChildViewById(rootView, id);
      if (dataCardView == null) {
        break missingId;
      }

      id = R.id.filterRadioRG;
      RadioGroup filterRadioRG = ViewBindings.findChildViewById(rootView, id);
      if (filterRadioRG == null) {
        break missingId;
      }

      id = R.id.forDayMRB;
      MaterialRadioButton forDayMRB = ViewBindings.findChildViewById(rootView, id);
      if (forDayMRB == null) {
        break missingId;
      }

      id = R.id.fpiMTV;
      MaterialTextView fpiMTV = ViewBindings.findChildViewById(rootView, id);
      if (fpiMTV == null) {
        break missingId;
      }

      id = R.id.headerCV;
      CardView headerCV = ViewBindings.findChildViewById(rootView, id);
      if (headerCV == null) {
        break missingId;
      }

      id = R.id.noResultIV;
      ImageView noResultIV = ViewBindings.findChildViewById(rootView, id);
      if (noResultIV == null) {
        break missingId;
      }

      id = R.id.nopMTV;
      MaterialTextView nopMTV = ViewBindings.findChildViewById(rootView, id);
      if (nopMTV == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      View progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }
      LayoutInvisibleProgressBarBinding binding_progressBar = LayoutInvisibleProgressBarBinding.bind(progressBar);

      id = R.id.progress_bar_shim;
      View progressBarShim = ViewBindings.findChildViewById(rootView, id);
      if (progressBarShim == null) {
        break missingId;
      }
      LayoutShimmerLineBinding binding_progressBarShim = LayoutShimmerLineBinding.bind(progressBarShim);

      id = R.id.sourceMTV;
      MaterialTextView sourceMTV = ViewBindings.findChildViewById(rootView, id);
      if (sourceMTV == null) {
        break missingId;
      }

      id = R.id.tActiveMTV;
      MaterialTextView tActiveMTV = ViewBindings.findChildViewById(rootView, id);
      if (tActiveMTV == null) {
        break missingId;
      }

      id = R.id.tFpiMTV;
      MaterialTextView tFpiMTV = ViewBindings.findChildViewById(rootView, id);
      if (tFpiMTV == null) {
        break missingId;
      }

      id = R.id.tNopMTV;
      MaterialTextView tNopMTV = ViewBindings.findChildViewById(rootView, id);
      if (tNopMTV == null) {
        break missingId;
      }

      id = R.id.totalMTV;
      MaterialTextView totalMTV = ViewBindings.findChildViewById(rootView, id);
      if (totalMTV == null) {
        break missingId;
      }

      id = R.id.uptoDateMRB;
      MaterialRadioButton uptoDateMRB = ViewBindings.findChildViewById(rootView, id);
      if (uptoDateMRB == null) {
        break missingId;
      }

      return new FragmentAnandaBinding((RelativeLayout) rootView, activeMTV, dataCardView,
          filterRadioRG, forDayMRB, fpiMTV, headerCV, noResultIV, nopMTV, binding_progressBar,
          binding_progressBarShim, sourceMTV, tActiveMTV, tFpiMTV, tNopMTV, totalMTV, uptoDateMRB);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
