// Generated by view binder compiler. Do not edit!
package com.licapps.bmmis.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.licapps.bmmis.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHusbandPolicyBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final MaterialTextView companyMTV;

  @NonNull
  public final ImageView deleteIV;

  @NonNull
  public final MaterialTextView planMTV;

  @NonNull
  public final MaterialTextView policyMTV;

  @NonNull
  public final MaterialTextView statusMTV;

  @NonNull
  public final MaterialTextView sumAssuredMTV;

  private ItemHusbandPolicyBinding(@NonNull CardView rootView, @NonNull MaterialTextView companyMTV,
      @NonNull ImageView deleteIV, @NonNull MaterialTextView planMTV,
      @NonNull MaterialTextView policyMTV, @NonNull MaterialTextView statusMTV,
      @NonNull MaterialTextView sumAssuredMTV) {
    this.rootView = rootView;
    this.companyMTV = companyMTV;
    this.deleteIV = deleteIV;
    this.planMTV = planMTV;
    this.policyMTV = policyMTV;
    this.statusMTV = statusMTV;
    this.sumAssuredMTV = sumAssuredMTV;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHusbandPolicyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHusbandPolicyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_husband_policy, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHusbandPolicyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.companyMTV;
      MaterialTextView companyMTV = ViewBindings.findChildViewById(rootView, id);
      if (companyMTV == null) {
        break missingId;
      }

      id = R.id.deleteIV;
      ImageView deleteIV = ViewBindings.findChildViewById(rootView, id);
      if (deleteIV == null) {
        break missingId;
      }

      id = R.id.planMTV;
      MaterialTextView planMTV = ViewBindings.findChildViewById(rootView, id);
      if (planMTV == null) {
        break missingId;
      }

      id = R.id.policyMTV;
      MaterialTextView policyMTV = ViewBindings.findChildViewById(rootView, id);
      if (policyMTV == null) {
        break missingId;
      }

      id = R.id.statusMTV;
      MaterialTextView statusMTV = ViewBindings.findChildViewById(rootView, id);
      if (statusMTV == null) {
        break missingId;
      }

      id = R.id.sumAssuredMTV;
      MaterialTextView sumAssuredMTV = ViewBindings.findChildViewById(rootView, id);
      if (sumAssuredMTV == null) {
        break missingId;
      }

      return new ItemHusbandPolicyBinding((CardView) rootView, companyMTV, deleteIV, planMTV,
          policyMTV, statusMTV, sumAssuredMTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
