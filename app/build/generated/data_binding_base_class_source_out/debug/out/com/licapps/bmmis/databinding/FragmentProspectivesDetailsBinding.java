// Generated by view binder compiler. Do not edit!
package com.licapps.bmmis.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.licapps.bmmis.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProspectivesDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialTextView accessIdMTV;

  @NonNull
  public final RecyclerView casesRV;

  @NonNull
  public final MaterialTextView dateMTV;

  @NonNull
  public final MaterialTextView displayMTV;

  @NonNull
  public final MaterialTextView fpMTV;

  @NonNull
  public final CardView headerCV;

  @NonNull
  public final MaterialTextView nameMTV;

  @NonNull
  public final ImageView noResultIV;

  @NonNull
  public final LayoutInvisibleProgressBarBinding progressBar;

  @NonNull
  public final MaterialTextView propNumberMTV;

  @NonNull
  public final MaterialTextView srNoMTV;

  private FragmentProspectivesDetailsBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialTextView accessIdMTV, @NonNull RecyclerView casesRV,
      @NonNull MaterialTextView dateMTV, @NonNull MaterialTextView displayMTV,
      @NonNull MaterialTextView fpMTV, @NonNull CardView headerCV,
      @NonNull MaterialTextView nameMTV, @NonNull ImageView noResultIV,
      @NonNull LayoutInvisibleProgressBarBinding progressBar,
      @NonNull MaterialTextView propNumberMTV, @NonNull MaterialTextView srNoMTV) {
    this.rootView = rootView;
    this.accessIdMTV = accessIdMTV;
    this.casesRV = casesRV;
    this.dateMTV = dateMTV;
    this.displayMTV = displayMTV;
    this.fpMTV = fpMTV;
    this.headerCV = headerCV;
    this.nameMTV = nameMTV;
    this.noResultIV = noResultIV;
    this.progressBar = progressBar;
    this.propNumberMTV = propNumberMTV;
    this.srNoMTV = srNoMTV;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProspectivesDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProspectivesDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_prospectives_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProspectivesDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accessIdMTV;
      MaterialTextView accessIdMTV = ViewBindings.findChildViewById(rootView, id);
      if (accessIdMTV == null) {
        break missingId;
      }

      id = R.id.casesRV;
      RecyclerView casesRV = ViewBindings.findChildViewById(rootView, id);
      if (casesRV == null) {
        break missingId;
      }

      id = R.id.dateMTV;
      MaterialTextView dateMTV = ViewBindings.findChildViewById(rootView, id);
      if (dateMTV == null) {
        break missingId;
      }

      id = R.id.displayMTV;
      MaterialTextView displayMTV = ViewBindings.findChildViewById(rootView, id);
      if (displayMTV == null) {
        break missingId;
      }

      id = R.id.fpMTV;
      MaterialTextView fpMTV = ViewBindings.findChildViewById(rootView, id);
      if (fpMTV == null) {
        break missingId;
      }

      id = R.id.headerCV;
      CardView headerCV = ViewBindings.findChildViewById(rootView, id);
      if (headerCV == null) {
        break missingId;
      }

      id = R.id.nameMTV;
      MaterialTextView nameMTV = ViewBindings.findChildViewById(rootView, id);
      if (nameMTV == null) {
        break missingId;
      }

      id = R.id.noResultIV;
      ImageView noResultIV = ViewBindings.findChildViewById(rootView, id);
      if (noResultIV == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      View progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }
      LayoutInvisibleProgressBarBinding binding_progressBar = LayoutInvisibleProgressBarBinding.bind(progressBar);

      id = R.id.propNumberMTV;
      MaterialTextView propNumberMTV = ViewBindings.findChildViewById(rootView, id);
      if (propNumberMTV == null) {
        break missingId;
      }

      id = R.id.srNoMTV;
      MaterialTextView srNoMTV = ViewBindings.findChildViewById(rootView, id);
      if (srNoMTV == null) {
        break missingId;
      }

      return new FragmentProspectivesDetailsBinding((RelativeLayout) rootView, accessIdMTV, casesRV,
          dateMTV, displayMTV, fpMTV, headerCV, nameMTV, noResultIV, binding_progressBar,
          propNumberMTV, srNoMTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
