// Generated by view binder compiler. Do not edit!
package com.licapps.bmmis.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.licapps.bmmis.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DailogTosetPinBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView mainHeadingTV;

  @NonNull
  public final TextInputEditText pin1ET;

  @NonNull
  public final TextInputLayout pin1TIL;

  @NonNull
  public final TextInputEditText pin2ET;

  @NonNull
  public final TextInputLayout pin2TIL;

  @NonNull
  public final MaterialButton setPinBTN;

  private DailogTosetPinBinding(@NonNull ConstraintLayout rootView, @NonNull TextView mainHeadingTV,
      @NonNull TextInputEditText pin1ET, @NonNull TextInputLayout pin1TIL,
      @NonNull TextInputEditText pin2ET, @NonNull TextInputLayout pin2TIL,
      @NonNull MaterialButton setPinBTN) {
    this.rootView = rootView;
    this.mainHeadingTV = mainHeadingTV;
    this.pin1ET = pin1ET;
    this.pin1TIL = pin1TIL;
    this.pin2ET = pin2ET;
    this.pin2TIL = pin2TIL;
    this.setPinBTN = setPinBTN;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DailogTosetPinBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DailogTosetPinBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dailog_toset_pin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DailogTosetPinBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mainHeadingTV;
      TextView mainHeadingTV = ViewBindings.findChildViewById(rootView, id);
      if (mainHeadingTV == null) {
        break missingId;
      }

      id = R.id.pin1ET;
      TextInputEditText pin1ET = ViewBindings.findChildViewById(rootView, id);
      if (pin1ET == null) {
        break missingId;
      }

      id = R.id.pin1TIL;
      TextInputLayout pin1TIL = ViewBindings.findChildViewById(rootView, id);
      if (pin1TIL == null) {
        break missingId;
      }

      id = R.id.pin2ET;
      TextInputEditText pin2ET = ViewBindings.findChildViewById(rootView, id);
      if (pin2ET == null) {
        break missingId;
      }

      id = R.id.pin2TIL;
      TextInputLayout pin2TIL = ViewBindings.findChildViewById(rootView, id);
      if (pin2TIL == null) {
        break missingId;
      }

      id = R.id.setPinBTN;
      MaterialButton setPinBTN = ViewBindings.findChildViewById(rootView, id);
      if (setPinBTN == null) {
        break missingId;
      }

      return new DailogTosetPinBinding((ConstraintLayout) rootView, mainHeadingTV, pin1ET, pin1TIL,
          pin2ET, pin2TIL, setPinBTN);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
