// Generated by view binder compiler. Do not edit!
package com.licapps.bmmis.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.radiobutton.MaterialRadioButton;
import com.google.android.material.textview.MaterialTextView;
import com.licapps.bmmis.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTopPerformersBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Chip agentChip;

  @NonNull
  public final RecyclerView casesRV;

  @NonNull
  public final Chip cliaChip;

  @NonNull
  public final Chip doChip;

  @NonNull
  public final MaterialTextView doNameMTV;

  @NonNull
  public final RadioGroup filterRadioRG;

  @NonNull
  public final MaterialRadioButton fpMRB;

  @NonNull
  public final CardView headerCV;

  @NonNull
  public final ImageView noResultIV;

  @NonNull
  public final MaterialRadioButton nopMRB;

  @NonNull
  public final MaterialTextView nopfpMTV;

  @NonNull
  public final ChipGroup performersChipCG;

  @NonNull
  public final LayoutInvisibleProgressBarBinding progressBar;

  @NonNull
  public final LayoutShimmerLineBinding progressBarShim;

  @NonNull
  public final MaterialTextView srNoMTV;

  private FragmentTopPerformersBinding(@NonNull RelativeLayout rootView, @NonNull Chip agentChip,
      @NonNull RecyclerView casesRV, @NonNull Chip cliaChip, @NonNull Chip doChip,
      @NonNull MaterialTextView doNameMTV, @NonNull RadioGroup filterRadioRG,
      @NonNull MaterialRadioButton fpMRB, @NonNull CardView headerCV, @NonNull ImageView noResultIV,
      @NonNull MaterialRadioButton nopMRB, @NonNull MaterialTextView nopfpMTV,
      @NonNull ChipGroup performersChipCG, @NonNull LayoutInvisibleProgressBarBinding progressBar,
      @NonNull LayoutShimmerLineBinding progressBarShim, @NonNull MaterialTextView srNoMTV) {
    this.rootView = rootView;
    this.agentChip = agentChip;
    this.casesRV = casesRV;
    this.cliaChip = cliaChip;
    this.doChip = doChip;
    this.doNameMTV = doNameMTV;
    this.filterRadioRG = filterRadioRG;
    this.fpMRB = fpMRB;
    this.headerCV = headerCV;
    this.noResultIV = noResultIV;
    this.nopMRB = nopMRB;
    this.nopfpMTV = nopfpMTV;
    this.performersChipCG = performersChipCG;
    this.progressBar = progressBar;
    this.progressBarShim = progressBarShim;
    this.srNoMTV = srNoMTV;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTopPerformersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTopPerformersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_top_performers, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTopPerformersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.agentChip;
      Chip agentChip = ViewBindings.findChildViewById(rootView, id);
      if (agentChip == null) {
        break missingId;
      }

      id = R.id.casesRV;
      RecyclerView casesRV = ViewBindings.findChildViewById(rootView, id);
      if (casesRV == null) {
        break missingId;
      }

      id = R.id.cliaChip;
      Chip cliaChip = ViewBindings.findChildViewById(rootView, id);
      if (cliaChip == null) {
        break missingId;
      }

      id = R.id.doChip;
      Chip doChip = ViewBindings.findChildViewById(rootView, id);
      if (doChip == null) {
        break missingId;
      }

      id = R.id.doNameMTV;
      MaterialTextView doNameMTV = ViewBindings.findChildViewById(rootView, id);
      if (doNameMTV == null) {
        break missingId;
      }

      id = R.id.filterRadioRG;
      RadioGroup filterRadioRG = ViewBindings.findChildViewById(rootView, id);
      if (filterRadioRG == null) {
        break missingId;
      }

      id = R.id.fpMRB;
      MaterialRadioButton fpMRB = ViewBindings.findChildViewById(rootView, id);
      if (fpMRB == null) {
        break missingId;
      }

      id = R.id.headerCV;
      CardView headerCV = ViewBindings.findChildViewById(rootView, id);
      if (headerCV == null) {
        break missingId;
      }

      id = R.id.noResultIV;
      ImageView noResultIV = ViewBindings.findChildViewById(rootView, id);
      if (noResultIV == null) {
        break missingId;
      }

      id = R.id.nopMRB;
      MaterialRadioButton nopMRB = ViewBindings.findChildViewById(rootView, id);
      if (nopMRB == null) {
        break missingId;
      }

      id = R.id.nopfpMTV;
      MaterialTextView nopfpMTV = ViewBindings.findChildViewById(rootView, id);
      if (nopfpMTV == null) {
        break missingId;
      }

      id = R.id.performersChipCG;
      ChipGroup performersChipCG = ViewBindings.findChildViewById(rootView, id);
      if (performersChipCG == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      View progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }
      LayoutInvisibleProgressBarBinding binding_progressBar = LayoutInvisibleProgressBarBinding.bind(progressBar);

      id = R.id.progress_bar_shim;
      View progressBarShim = ViewBindings.findChildViewById(rootView, id);
      if (progressBarShim == null) {
        break missingId;
      }
      LayoutShimmerLineBinding binding_progressBarShim = LayoutShimmerLineBinding.bind(progressBarShim);

      id = R.id.srNoMTV;
      MaterialTextView srNoMTV = ViewBindings.findChildViewById(rootView, id);
      if (srNoMTV == null) {
        break missingId;
      }

      return new FragmentTopPerformersBinding((RelativeLayout) rootView, agentChip, casesRV,
          cliaChip, doChip, doNameMTV, filterRadioRG, fpMRB, headerCV, noResultIV, nopMRB, nopfpMTV,
          performersChipCG, binding_progressBar, binding_progressBarShim, srNoMTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
